# Generated by Django 3.2.25 on 2024-07-03 21:41

from django.db import migrations, models
import django.db.models.deletion
import utilities.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comments', '0002_auto_20211130_2003'),
        ('quest_manager', '0035_questsubmission_draft_comment'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', models.TextField(help_text='Appears to the student when they are completing the quest. Should provide specific guidance, a prompt, or a problem statement for the student to address.')),
                ('solution_text', models.TextField(blank=True, help_text="This text will appear to the marker, allowing for an easy comparison of the student's submission to an ideal or example solution.", null=True)),
                ('solution_file', utilities.models.RestrictedFileField(blank=True, help_text="This file will appear to the marker, allowing them to easily compare the student's submission to an ideal or example solution for file-based questions.", null=True, upload_to='quest/question/solution/%Y/%m/%d')),
                ('allowed_file_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('image or video', 'Image or video'), ('all', 'All')], default='all', help_text='The types of files that can be uploaded by a student for this question.', max_length=50)),
                ('marker_notes', models.TextField(blank=True, help_text='This text will appear to the marker, providing additional context and info, if needed.', null=True)),
                ('required', models.BooleanField(default=True, help_text='If this field is unchecked, the student can complete the quest without answering this question.')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_last_edit', models.DateTimeField(auto_now=True)),
                ('ordinal', models.PositiveIntegerField(default=1, help_text='Questions will be displayed to the student in order from lowest ordinal to highest ordinal.')),
                ('type', models.CharField(choices=[('short_answer', 'Short Answer'), ('long_answer', 'Long Answer'), ('file_upload', 'File Upload')], default='short_answer', max_length=20)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quest_manager.quest')),
            ],
            options={
                'ordering': ['ordinal'],
            },
        ),
        migrations.CreateModel(
            name='QuestionSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(blank=True, help_text='A text response to a question. This is what the teacher will look at when marking the question.', null=True)),
                ('response_file', utilities.models.RestrictedFileField(blank=True, help_text='A file response to a question. This is what the teacher will look at when marking the question.', null=True, upload_to='quest/question/submission/%Y/%m/%d')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comments.comment')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='questions.question')),
            ],
            options={
                'ordering': ['question__ordinal'],
            },
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('quest', 'ordinal'), name='unique_ordinals'),
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('quest', 'ordinal')},
        ),
    ]
