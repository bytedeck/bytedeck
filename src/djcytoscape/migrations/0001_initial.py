# Generated by Django 1.11.17 on 2018-12-28 03:51

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CytoElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(choices=[('nodes', 'nodes'), ('edges', 'edges')], default='nodes', max_length=6)),
                ('data_dict', models.TextField(blank=True, help_text="python dictionary stored as string: {'key1':'value1', 'key2':'value2'}", null=True)),
                ('selected', models.BooleanField(default=False)),
                ('selectable', models.BooleanField(default=True)),
                ('locked', models.BooleanField(default=False)),
                ('grabbable', models.BooleanField(default=True)),
                ('classes', models.CharField(blank=True, help_text='a space separated list of css class names for the element', max_length=250, null=True)),
                ('id_styles', models.TextField(blank=True, help_text='styles specific to this node (using id selector)', null=True)),
                ('label', models.CharField(blank=True, help_text='if present, will be used as node label instead of id', max_length=50, null=True)),
                ('min_len', models.IntegerField(default=1, help_text='number of ranks to keep between the source and target of the edge')),
                ('href', models.URLField(blank=True, null=True)),
                ('data_parent', models.ForeignKey(blank=True, help_text='indicates the compound node parent; blank/null => no parent', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='djcytoscape.CytoElement')),
                ('data_source', models.ForeignKey(blank=True, help_text='edge comes from this node', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='djcytoscape.CytoElement')),
                ('data_target', models.ForeignKey(blank=True, help_text='edge goes to this node', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='djcytoscape.CytoElement')),
            ],
        ),
        migrations.CreateModel(
            name='CytoScape',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('initial_object_id', models.PositiveIntegerField(help_text="The id of the object for this content type. You may need to look this up.  E.g. If the initial type is a quest, then the quest's id goes here.")),
                ('is_the_primary_scape', models.BooleanField(default=False, help_text='There can only be one primary map/scape. Making this True will change all other map/scapes will be set to False.')),
                ('last_regeneration', models.DateTimeField(default=django.utils.timezone.now)),
                ('container_element_id', models.CharField(default='cy', help_text="id of the html element where the graph's canvas will be placed", max_length=50)),
                ('autobreak', models.BooleanField(default=True, help_text='Stop the map when reaching a quest with a ~ or a badge with a *.If this is unchecked, the map is gonna be CRAZY!')),
                ('initial_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('parent_scape', models.ForeignKey(blank=True, help_text='The map/scape preceding this one, so it can be linked back to', null=True, on_delete=django.db.models.deletion.CASCADE, to='djcytoscape.CytoScape')),
            ],
        ),
        migrations.CreateModel(
            name='CytoStyleClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='a period will be added before the name when used as a selector', max_length=20)),
                ('styles', models.TextField(blank=True, help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#style)', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CytoStyleSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('init_options', models.TextField(blank=True, default='  minZoom: 0.5, \n  maxZoom: 1.5, \n  wheelSensitivity: 0.1, \n', help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#core/initialisation)', null=True)),
                ('layout_name', models.CharField(choices=[('null', 'null'), ('random', 'random'), ('grid', 'grid'), ('circle', 'circle'), ('concentric', 'concentric'), ('breadthfirst', 'breadthfirst'), ('cose', 'cose'), ('cola', 'cola'), ('dagre', 'dagre')], default='dagre', help_text='see http://js.cytoscape.org/#layouts', max_length=50)),
                ('layout_options', models.TextField(blank=True, default="'nodeSep': 25, \n 'rankSep': 10, \n", help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#layouts)', null=True)),
                ('node_styles', models.TextField(blank=True, default="'label':         'data(label)', \n'text-valign':   'center', 'text-halign': 'right', \n'text-margin-x': '-270', \n'background-fit':'contain', \n'shape':         'roundrectangle', \n'background-opacity': 0, \n'background-position-x': 0, \n'width':         300, \n'border-width':  1, \n'padding-right': 5, 'padding-left':5, 'padding-top':5, 'padding-bottom':5, \n'text-events':   'yes',", help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#style)', null=True)),
                ('edge_styles', models.TextField(blank=True, default="'width': 1, \n'curve-style':   'bezier', \n'line-color':    'black', \n'line-style':    'solid', \n'target-arrow-shape': 'triangle-backcurve', \n'target-arrow-color':'black', \n'text-rotation': 'autorotate', \n'label':         'data(label)', \n", help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#style)', null=True)),
                ('parent_styles', models.TextField(blank=True, default="'text-rotation':   '-90deg', \n'text-halign':     'left', \n'text-margin-x':   -10, \n'text-margin-y':   -40, \n", help_text='Format = key1: value1, key2: value2, ... (see http://js.cytoscape.org/#style)', null=True)),
                ('javascript', models.TextField(blank=True, default='$(document).ready(function() { \n\n});\n', help_text='Will be placed inside script tags. JQuery available. See http://js.cytoscape.org/#core', null=True)),
                ('style_classes', models.ManyToManyField(blank=True, to='djcytoscape.CytoStyleClass')),
            ],
        ),
        migrations.AddField(
            model_name='cytoscape',
            name='style_set',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='djcytoscape.CytoStyleSet'),
        ),
        migrations.AddField(
            model_name='cytoelement',
            name='scape',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djcytoscape.CytoScape'),
        ),
        migrations.AlterUniqueTogether(
            name='cytoscape',
            unique_together={('initial_content_type', 'initial_object_id')},
        ),
    ]
