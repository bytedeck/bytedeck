# Generated by Django 1.11.17 on 2018-12-28 03:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import prerequisites.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('xp', models.PositiveIntegerField(default=0)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_last_edit', models.DateTimeField(auto_now=True)),
                ('short_description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/badges/')),
                ('sort_order', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['sort_order', 'name'],
            },
            bases=(models.Model, prerequisites.models.IsAPrereqMixin),
        ),
        migrations.CreateModel(
            name='BadgeAssertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordinal', models.PositiveIntegerField(default=1, help_text='indicating the nth time user has received this badge')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('game_lab_transfer', models.BooleanField(default=False, help_text='XP not counted')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badges.Badge')),
                ('issued_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='issued_by', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='courses.Semester')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BadgeSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name_plural': "Badge Series'",
            },
        ),
        migrations.CreateModel(
            name='BadgeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('sort_order', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('repeatable', models.BooleanField(default=True)),
                ('fa_icon', models.CharField(blank=True, help_text="Name of a font-awesome icon, e.g.'fa-gift'", max_length=50, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.AddField(
            model_name='badge',
            name='badge_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='badges.BadgeType'),
        ),
        migrations.AddField(
            model_name='badge',
            name='series',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='badges.BadgeSeries'),
        ),
    ]
