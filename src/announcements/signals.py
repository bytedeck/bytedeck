import json

from django.contrib.auth import get_user_model
from django.db import connection
from django.db.models.signals import post_save
from django.dispatch import receiver

from django_celery_beat.models import CrontabSchedule, PeriodicTask

from siteconfig.models import SiteConfig
from tenant.utils import get_root_url

from .models import Announcement

User = get_user_model()


@receiver(post_save, sender=Announcement)
def save_announcement_signal(sender, instance, **kwargs):
    """ After an announcement is saved, check if it's a draft and that it should auto-publish the results.
    If it should, then check if there is already a beat task scheduled and replace it, or create a new schedule
    """

    task_name = f"Autopublish task for Announcement #{instance.id} on schema {connection.schema_name}"

    if instance.draft and instance.auto_publish:

        sending_user, _ = User.objects.get_or_create(
            pk=SiteConfig.get().deck_ai.pk,
            defaults={
                'username': "Autogenerated AI",
                'password': "You should create a user with the proper attributes that you want to be your AI",
            },
        )

        # There is a bug when more than 1 `PeriodicTask` is using a single `ClockedSchedule` instance
        # So, we will use `CrontabSchedule` instead. Still achieves the same functionality
        # See issue: https://github.com/celery/django-celery-beat/issues/283
        # TODO: Revert back to this once the above issue is fixed
        # schedule, _ = ClockedSchedule.objects.get_or_create(
        #     clocked_time=instance.datetime_released
        # )

        schedule, _ = CrontabSchedule.objects.get_or_create(
            minute=instance.datetime_released.minute,
            hour=instance.datetime_released.hour,
            day_of_month=instance.datetime_released.day,
            month_of_year=instance.datetime_released.month,
            day_of_week='*',
            timezone=instance.datetime_released.tzinfo
        )

        # PeriodicTask doesn't have an update_or_create() method for some reason, so do it long way
        # https://github.com/celery/django-celery-beat/issues/106

        defaults = {
            # 'clocked': schedule,
            'crontab': schedule,
            'task': 'announcements.tasks.publish_announcement',
            'queue': 'default',
            'kwargs': json.dumps({  # beat needs json serializable args, so make sure they are
                'user_id': sending_user.id,
                'announcement_id': instance.id,
                'root_url': get_root_url(),
            }),
            # Inject the schema name into the task's header, as that's where tenant-schema-celery
            # will be looking for it to ensure it is tenant aware
            'headers': json.dumps({
                '_schema_name': connection.schema_name,
            }),
            'one_off': True,
            'enabled': True,
        }

        try:
            task = PeriodicTask.objects.get(name=task_name)
            for key, value in defaults.items():
                setattr(task, key, value)
            print(f"PeriodicTask exists, updating {task}")
            task.save()
        except PeriodicTask.DoesNotExist:
            new_values = {'name': task_name}
            new_values.update(defaults)
            task = PeriodicTask(**new_values)
            task.save()

        # End manual update_or_create() ############

    else:  # There shouldn't be a task so delete if it exists
        try:
            task = PeriodicTask.objects.get(name=task_name)
            task.delete()
        except PeriodicTask.DoesNotExist:
            pass
