# https://docs.docker.com/compose/environment-variables/
# https://django-environ.readthedocs.io/en/latest/#django-environ

SECRET_KEY=Change.Me!

DEBUG=True

## ROOT DOMAIN ################################
#
# This value is used to set many other variables including:
#  -domain_url for the public tenant
#  -domain and name for the Site model object (see https://docs.djangoproject.com/en/3.1/ref/contrib/sites/ )
#  -Django's ALLOWED_HOSTS = "." + ROOT_DOMAIN
#  

ROOT_DOMAIN=bytedeck.com
#ROOT_DOMAIN=localhost

# You can set ALLOWED_HOSTS seperately if needed, otherwise it will use 
# "." + ROOT_DOMAIN which will allow the public tenants
# comma seperated list
#ALLOWED_HOSTS=.localhost

# User and Group
WUID=1000
WGID=999

## EMAIL ######################################

#EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
#EMAIL_FILE_PATH

#EMAIL_HOST=
#EMAIL_HOST_USER=
#EMAIL_HOST_PASSWORD=

EMAIL_PORT=587
EMAIL_USE_TLS=True

#DEFAULT_FROM_EMAIL=

# SERVER ERRORS EMAIL (comma seperated list)
ADMINS=Admin Name:admin@exmaple.com,Admin2 Name:admin2@exmaple.com
#SERVER_EMAIL=server@example.com
#EMAIL_SUBJECT_PREFIX=


## MEDIA AND STATIC FILES ##############################

#MEDIA_ROOT=
#STATIC_ROOT=
#STATICFILES_DIRS=('/var/www/static/', 'etc',)


## REDIS ###############################################

# Only used for local development with `./src/manage.py runserver`
# When running web service in a container with `docker-compose up web`
#  the app will read REDIS_HOST=redis from docker-compose.yml
#  similarly with the celery services
REDIS_HOST=127.0.0.1

REDIS_PORT=6379


## POSTGRES ############################################

# Only used for local development with `./src/manage.py runserver`
# When running web service in a container with `docker-compose up web`
#  the app will read POSTGRES_HOST=db from docker-compose.yml
#  similarly with the celery-beat service
POSTGRES_HOST=127.0.0.1

POSTGRES_PORT=5432
POSTGRES_DB_NAME=postgres
POSTGRES_USER=postgres

# No password needed in development
#POSTGRES_PASSWORD=
POSTGRES_HOST_AUTH_METHOD=trust


## PUBLIC TENANT  ######################################

# Used to login to the public tenant admin
DEFAULT_SUPERUSER_USERNAME=admin
DEFAULT_SUPERUSER_PASSWORD=password
#DEFAULT_SUPERUSER_EMAIL=


## TENANTS ##############################################

TENANT_DEFAULT_SUPERUSER_USERNAME=admin
TENANT_DEFAULT_SUPERUSER_PASSWORD=password


# RECAPTCHA #######################################################

#RECAPTCHA_PUBLIC_KEY=
#RECAPTCHA_PRIVATE_KEY=


# STATIC AND MEDIA FILES
# set below to 1 only when using AWS
USE_S3=0  

# AWS 

# To connect to AWS(S3) either
# 1. keep the access key and secret blank to use the IAM role linked to ec2 machine (default connection)
# 2. OR specify the real value to use a specific IAM user
AWS_ACCESS_KEY_ID=xxxxxxxxxxxxxx
AWS_SECRET_ACCESS_KEY=xxxxxxxxxx

# CDN
CDN_static=xxxxxxxx.cloudfront.net

# S3
AWS_STORAGE_BUCKET_NAME=xxxx
